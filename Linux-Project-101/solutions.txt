PROJECT-101
First Part:
event_history.txt

SOLUTION :

cat event_history.csv | grep "serdar" | grep -i "Terminate" | grep -o  "i-.\{17\}" | sort | uniq > result.txt

cat event_history.csv | grep "serdar" | grep -i "terminate" | grep -Eio "i-[a-z0-9]{17}" | sort | uniq > result.txt

cat event_history.csv | grep "serdar" | grep -i "terminate" | grep -Eo "i-[a-zA-Z0-9]{17}" | sort | uniq > result.txt

Second Part :

user_passwd.sh    dosyamın içi:
#!/bin/bash

if [[ ${UID} -ne 0 ]] 
then
   echo "please run with sudo command!"
   exit 1
fi

read -p "Enter your name     :" USER_NAME
read -p "Enter your comment  :" COMMENT
read -p "Enter your password :" PASSWORD

useradd -c ${COMMENT} -m ${USER_NAME}

if [[ $? -eq 0 ]]
then
   echo -e "\nUser created succesfully !!!"	
else 
   echo "Try again !"
fi   
echo ${PASSWORD} | passwd -- stdin ${USER_NAME}

if [[ $? -eq 0 ]]
then
   echo -e "\nPassword created succesfully !!!"
else
   echo "Try again"
fi   
passwd -e ${USER_NAME}




sudo useradd -c "abc" -m "user1" user1 bunu scripte yazdık

4.bolum 1.task
sed -i  "s/ec2-private_ip/$(grep -i "PrivateIpAddress" info.json | head -1 | cut -d'"' -f4)/" terraform.tf

2.task
MY_KEY=$(cat certificate.pem)
echo -e $MY_KEY > cert.pem

3.task

grep -i "invalid user" auth.log  |  cut -d' ' -f8 | uniq -c > invalid_user.log 
grep -i "invalid user" auth.log  |  cut -d' ' -f9 | uniq -c >> invalid_user.log
cat invalid_user.log | grep -v "from" | grep -v "for" | grep -v "invalid"
cat invalid_user.log | grep -v "from|for|invalid|user
bunu script olarak yaz 

third part 3. bölüm

#!/bin/bash

# Check if we are root privilage or not

if [[ ${UID} -ne 0 ]]
then
   echo "Please use this bash script with root privilage"
   exit 1
fi

# Which files are we going to back up. Please make sure to exist /home/ec2-user/data file

backup_files="/home/ec2-user/data /etc /boot /usr"

# Where do we backup to. Please crete this file before execute this script

dest="/mnt/backup"

# Create archive filename based on time

time=$(date +"%Y_%m_%d_%I_%M_%p")
hostname=$(hostname -s)
archive_file="${hostname}-${time}.tgz"

# Print start status message.

echo "We will back up ${backup_files} to ${dest}/${archive_file} "
date
echo

Third -part 3. bölüm (backup alıp tar dosyası yapma her 5 dakikada bir)
bunun için yazılan script dosyası:

backup.sh    adlı scriptimin içi:

#!/bin/bash

# Check if we are root privilage or not

if [[ ${UID} -ne 0 ]]
then
   echo "Please use this bash script with root privilage"
   exit 1
fi

# Which files are we going to back up. Please make sure to exist /home/ec2-user/data file
mkdir  /home/ec2-user/data  (data folder ımı oluşturmalıyım)
backup_files="/home/ec2-user/data /etc /boot /usr"

# Where do we backup to. Please crete this file before execute this script

dest="/mnt/backup"

# Create archive filename based on time

time=$(date +"%Y_%m_%d_%I_%M_%p")
hostname=$(hostname -s)
archive_file="${hostname}-${time}.tgz"  (bu host ıp sini verir (-s) flag i ile) bu daha iyi ıp var çünkü.
archive_file="${HOSTNAME}-${time}.tgz"  (bu da olur)

# Print start status message.

echo "We will back up ${backup_files} to ${dest}/${archive_file} "
date
echo

# Backup the files using tar.

tar czf ${dest}/${archive_file} ${backup_files}

# Print end status message.

echo
echo "Congrulations! Your Backup is ready"
date

# Long listing of files in $dest to check file sizes.

ls -lh $dest

# Backup the files using tar.

tar cvzf ${dest}/${archive_file} ${backup_files}



# Print end status message.

echo
echo "Congrulations! Your Backup is ready"
date

# Long listing of files in $dest to check file sizes.


ls -lh $dest


NOT : bu script Third-Part dosyasına yazıldığından o foldera girip scriptimi çalıştıracağım.

chmod +x backup.sh

NOT: bu komutu çalıştırmadan önce (sudo mkdir /mnt/backup   foldere nı muhakkak oluşturmalıyım onun altına alıyorum çünkü script imde bu şekilde yer belirttim.)
 (ls /mnt ) ile backup   oluştu mu bak kontrol et!!!!

NOT: şimdi de mkdir /hom/ec2-user/data   klasörümü folder ımı oluşturmalıyım

sudo ./backup.sh çalışıyor mu bak




her 5 dakikada bir backup alma 

CRONTAB ile:

*/5 * * * * sudo /home/ec2-user/backup.sh   (beş dakikada bir alır)
* * * * *  sudo /home/ec2-user/backup.sh    (her dakikada bir alır)

ls /mnt/backup   (buradan oluşmuşmu bakarım)

* * * * * date >> /home/ec2-user/date.txt
CRONTAB   da altalta birden fazla komut yazılabilir
crontab -e
* * * * *  sudo /home/ec2-user/backup.sh    (her dakikada bir alır)
* * * * * date >> /home/ec2-user/date.txt

crontab -r (içinde yazdıklarımı kileri siliyormuş.


